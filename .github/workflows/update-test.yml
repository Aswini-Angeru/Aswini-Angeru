name: Update Config and Push to Release Branch
 
on:
  push:
    branches:
      - release1
 
permissions:
  contents: write  # This grants write permission to the contents of the repository
  pull-requests: write
 
jobs:
  update-config:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    -
      name: Save Current Git Commit ID
      # if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/feature-sat-pullrequest') && (github.event_name == 'push')
      run: |
        mkdir -p sha
        echo ${{ github.sha }} > sha/git-commit.txt
        echo $GITHUB_RUN_NUMBER > sha/action-info.txt
        cat version.txt > sha/version.txt
        ls  sha
        pwd
      # env:
      #   PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
    -
      name: Save version.txt
      # if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/feature-sat-pullrequest')  && (github.event_name == 'push')
      # && contains(fromJSON('["det push workflow"]'), github.workflow) && (github.event_name == 'push')
      run: |
        APP_VERSION=$(head -n 1 ./version.txt)
        echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
        echo "${APP_VERSION}-${{ github.run_number }}" > sha/app-version.txt
 
    - name: Create branch and update sha folder
      # if: (github.ref == 'refs/heads/feature-sat-pullrequest')
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git          
        # Move sha folder
        mkdir -p sha-updated
        mv sha sha-updated/sha
         
        # Commit and push the changes
        git add sha-updated/sha
        git commit -m "Update sha folder"
        # Create a pull request
        gh pr create --base "feature/sat" --head "release1" --title "Update sha Folder from release to" --body "This PR updates the sha folder for the release branch."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

 
